/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/webpack/buildin/harmony-module.js":
/*!*********************************************************!*\
  !*** ../node_modules/webpack/buildin/harmony-module.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_tabs_init_tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/tabs/init-tabs */ "./js/modules/tabs/init-tabs.js");
/* harmony import */ var _modules_form_validate_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/form-validate/form */ "./js/modules/form-validate/form.js");
/* harmony import */ var _vendor_lazysizes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vendor/lazysizes */ "./js/vendor/lazysizes.js");
/* harmony import */ var _vendor_itc_slider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vendor/itc-slider */ "./js/vendor/itc-slider.js");







// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  var picture = document.querySelectorAll('[data-validate="picture"]');
  var slider = document.querySelectorAll('.itc-slider');
  picture.forEach(function (e) {
    e.style.display = 'block';
  });

  // Utils
  // ---------------------------------

  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_tabs_init_tabs__WEBPACK_IMPORTED_MODULE_2__["initTabs"])();
    var form = new _modules_form_validate_form__WEBPACK_IMPORTED_MODULE_3__["Form"]();
    window.form = form;
    form.init();
    Object(_vendor_lazysizes__WEBPACK_IMPORTED_MODULE_4__["lazySizes"])();
    slider.forEach(function (el) {
      _vendor_itc_slider__WEBPACK_IMPORTED_MODULE_5__["ItcSlider"].getOrCreateInstance(el);
    });
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/form-validate/callback.js":
/*!**********************************************!*\
  !*** ./js/modules/form-validate/callback.js ***!
  \**********************************************/
/*! exports provided: callbacks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "callbacks", function() { return callbacks; });
var baseSuccessCallback = function baseSuccessCallback() {
  // В данном колбеке бэкендер, либо разработчик при необходимости будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки или успешную отправку формы на сервер
};
var baseErrorCallback = function baseErrorCallback(event) {
  event.preventDefault();
  // Данный коллбек используется при необходимости выполнить какое-либо действие помимо показа ошибок при попытке отправить неккорректные данные, он не связан с запросами на сервер
};

var callbacks = {
  base: {
    // Сбросс формы
    reset: true,
    // Таймаут сброса формы
    resetTimeout: 500,
    successCallback: baseSuccessCallback,
    errorCallback: baseErrorCallback
  }
};

/***/ }),

/***/ "./js/modules/form-validate/form.js":
/*!******************************************!*\
  !*** ./js/modules/form-validate/form.js ***!
  \******************************************/
/*! exports provided: Form */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Form", function() { return Form; });
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator */ "./js/modules/form-validate/validator.js");
/* harmony import */ var _callback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./callback */ "./js/modules/form-validate/callback.js");
/* harmony import */ var _init_phone_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init-phone-input */ "./js/modules/form-validate/init-phone-input.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var Form = /*#__PURE__*/function () {
  function Form() {
    _classCallCheck(this, Form);
    this._validator = new _validator__WEBPACK_IMPORTED_MODULE_0__["Validator"]();
    this._initPhoneInput = _init_phone_input__WEBPACK_IMPORTED_MODULE_2__["initPhoneInput"];
    this._callbacks = _callback__WEBPACK_IMPORTED_MODULE_1__["callbacks"];
  }
  _createClass(Form, [{
    key: "_resetSelect",
    value: function _resetSelect(select) {
      var nativeSelect = select.querySelector('select');
      var activeIndex = nativeSelect.options.selectedIndex;
      var selectedOption = nativeSelect.options[activeIndex];
      var buttonText = select.querySelector('.custom-select__text');
      var selectItems = select.querySelectorAll('.custom-select__item');
      buttonText.textContent = selectedOption.textContent;
      selectItems.forEach(function (item, index) {
        if (index === activeIndex - 1) {
          item.setAttribute('aria-selected', 'true');
          return;
        }
        item.setAttribute('aria-selected', 'false');
      });
      if (!nativeSelect.value) {
        select.classList.remove('not-empty');
        select.classList.remove('is-valid');
      }
    }
  }, {
    key: "_resetSelects",
    value: function _resetSelects(form) {
      var _this = this;
      var selects = form.querySelectorAll('[data-select]');
      selects.forEach(function (select) {
        _this._resetSelect(select);
      });
    }
  }, {
    key: "reset",
    value: function reset(form) {
      var _this2 = this;
      form.reset();
      form.querySelectorAll('.is-invalid').forEach(function (item) {
        return item.classList.remove('is-invalid');
      });
      form.querySelectorAll('.is-valid').forEach(function (item) {
        return item.classList.remove('is-valid');
      });
      form.querySelectorAll('.free-lesson__message').forEach(function (item) {
        return item.remove();
      });
      setTimeout(function () {
        _this2._resetSelects(form);
      });
    }
  }, {
    key: "initPhoneInput",
    value: function initPhoneInput(parent) {
      this._initPhoneInput(parent);
    }
  }, {
    key: "validateForm",
    value: function validateForm(form) {
      return this._validator.validateForm(form);
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(item) {
      return this._validator.validateFormElement(item);
    }
  }, {
    key: "_onFormSubmit",
    value: function _onFormSubmit(event) {
      var _this3 = this;
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      if (this.validateForm(event.target) && callback) {
        this._callbacks[callback].successCallback(event);
        if (this._callbacks[callback].reset) {
          setTimeout(function () {
            _this3.reset(event.target);
          }, this._callbacks[callback].resetTimeout ? this._callbacks[callback].resetTimeout : 500);
        }
        return;
      }
      if (!this.validateForm(event.target) && callback) {
        this._callbacks[callback].errorCallback(event);
        return;
      }
    }
  }, {
    key: "_onFormInput",
    value: function _onFormInput(item) {
      this.validateFormElement(item);
    }
  }, {
    key: "_initValidate",
    value: function _initValidate(parent) {
      var _this4 = this;
      var form = parent.querySelector('form');
      if (!form) {
        return;
      }
      var phoneParents = form.querySelectorAll('[data-validate-type="phone"]');
      phoneParents.forEach(function (item) {
        return _this4._initPhoneInput(item);
      });
      var callback = parent.dataset.callback;
      form.noValidate = true;
      form.addEventListener('submit', function (event) {
        _this4._onFormSubmit(event, callback);
      });
      form.addEventListener('input', function (event) {
        _this4._onFormInput(event.target);
      });
      form.addEventListener('reset', function (event) {
        _this4.reset(event.target);
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this5 = this;
      this._validateParent = document.querySelectorAll('[data-form-validate]');
      if (!this._validateParent.length) {
        return;
      }
      this._validateParent.forEach(function (parent) {
        return _this5._initValidate(parent);
      });
    }
  }]);
  return Form;
}();

/***/ }),

/***/ "./js/modules/form-validate/init-phone-input.js":
/*!******************************************************!*\
  !*** ./js/modules/form-validate/init-phone-input.js ***!
  \******************************************************/
/*! exports provided: initPhoneInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneInput", function() { return initPhoneInput; });
var baseCountryCode = '+7';
var baseMatrix = ' (___) ___ __ __';
var phoneLength = baseCountryCode.length + baseMatrix.length;
var onPhoneInputInput = function onPhoneInputInput(e) {
  var matrix = "".concat(baseCountryCode).concat(baseMatrix);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = e.target.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  e.target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var onPhoneInputFocus = function onPhoneInputFocus(_ref) {
  var target = _ref.target;
  if (!target.value) {
    target.value = baseCountryCode;
  }
  target.addEventListener('input', onPhoneInputInput);
  target.addEventListener('blur', onPhoneInputBlur);
  target.addEventListener('keydown', onPhoneInputKeydown);
  target.addEventListener('paste', onPhoneInputPaste);
  target.addEventListener('click', onPhoneInputClick);
};
var onPhoneInputClick = function onPhoneInputClick(e) {
  if (e.target.selectionStart < 4) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputPaste = function onPhoneInputPaste(e) {
  e.target.setSelectionRange(0, 0);
  if (!e.target.selectionStart) {
    setTimeout(function () {
      if (e.target.value.startsWith('+7')) {
        return;
      }
      if (e.target.value.startsWith('+8')) {
        e.target.value = "+7 ".concat(e.target.value.slice(3));
        return;
      }
      e.target.value = '';
    });
  }
};
var onPhoneInputKeydown = function onPhoneInputKeydown(e) {
  if (e.target.selectionStart < 4 && (e.keyCode === 37 || e.keyCode === 13)) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputBlur = function onPhoneInputBlur(_ref2) {
  var target = _ref2.target;
  if (target.value === baseCountryCode) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    if (!parent.hasAttribute('data-required')) {
      parent.classList.remove('is-valid');
      parent.classList.remove('is-invalid');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onPhoneInputInput);
    target.removeEventListener('blur', onPhoneInputBlur);
    target.removeEventListener('keydown', onPhoneInputKeydown);
    target.removeEventListener('paste', onPhoneInputPaste);
    target.removeEventListener('click', onPhoneInputClick);
  }
};
var initPhoneInput = function initPhoneInput(parent) {
  var input = parent.querySelector('input');
  parent.dataset.phoneLength = phoneLength;
  input.addEventListener('focus', onPhoneInputFocus);
};

/***/ }),

/***/ "./js/modules/form-validate/matrix.js":
/*!********************************************!*\
  !*** ./js/modules/form-validate/matrix.js ***!
  \********************************************/
/*! exports provided: matrixReplace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixReplace", function() { return matrixReplace; });
var matrixReplace = function matrixReplace(item, matrix, RegEx) {
  if (!matrix) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат матрицы: data-matrix=""');
    item.value = '';
    return;
  }
  if (!RegEx) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    item.value = '';
    return;
  }
  var def = matrix.replace(RegEx, '');
  var val = item.value.replace(RegEx, '');
  var i = 0;
  if (def.length >= val.length) {
    val = def;
  }
  item.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

/***/ }),

/***/ "./js/modules/form-validate/regular-expression.js":
/*!********************************************************!*\
  !*** ./js/modules/form-validate/regular-expression.js ***!
  \********************************************************/
/*! exports provided: getLimitationsRegEx, getMatrixLimitationsRegEx, getMailRegEx */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLimitationsRegEx", function() { return getLimitationsRegEx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixLimitationsRegEx", function() { return getMatrixLimitationsRegEx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMailRegEx", function() { return getMailRegEx; });
var setLimitationError = function setLimitationError(limitation) {
  // eslint-disable-next-line no-console
  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F(data-limitation=\"".concat(limitation, "\") - \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439."));
};
var getLimitationsRegEx = function getLimitationsRegEx(limitation) {
  switch (limitation) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;
    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;
    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;
    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;
    case 'latin':
      return /[^a-zA-Z\s]/g;
    default:
      return setLimitationError(limitation);
  }
};
var getMatrixLimitationsRegEx = function getMatrixLimitationsRegEx(matrix) {
  switch (matrix) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;
    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;
    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;
    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;
    case 'latin':
      return /[^\a-z\A-Z]/g;
    default:
      return false;
  }
};
var getMailRegEx = function getMailRegEx() {
  return /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
};

/***/ }),

/***/ "./js/modules/form-validate/render-message.js":
/*!****************************************************!*\
  !*** ./js/modules/form-validate/render-message.js ***!
  \****************************************************/
/*! exports provided: Message */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Message", function() { return Message; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Message = /*#__PURE__*/function () {
  function Message() {
    _classCallCheck(this, Message);
    this._baseErrorText = 'Это поле является обязательным';
  }
  _createClass(Message, [{
    key: "_messageTemplate",
    value: function _messageTemplate(message, state) {
      var cssClass = state === 'valid' ? 'is-valid' : 'is-invalid';
      return "<span class=\"free-lesson__message ".concat(cssClass, "\">").concat(message, "</span>");
    }
  }, {
    key: "removeMessage",
    value: function removeMessage(parent) {
      var parentMessage = parent.querySelector('.free-lesson__message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
  }, {
    key: "renderMessage",
    value: function renderMessage(parent, message, state) {
      this.removeMessage(parent);
      parent.insertAdjacentHTML('beforeend', this._messageTemplate(message, state));
    }
  }]);
  return Message;
}();

/***/ }),

/***/ "./js/modules/form-validate/validator.js":
/*!***********************************************!*\
  !*** ./js/modules/form-validate/validator.js ***!
  \***********************************************/
/*! exports provided: Validator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validator", function() { return Validator; });
/* harmony import */ var _regular_expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regular-expression */ "./js/modules/form-validate/regular-expression.js");
/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matrix */ "./js/modules/form-validate/matrix.js");
/* harmony import */ var _render_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render-message */ "./js/modules/form-validate/render-message.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var Validator = /*#__PURE__*/function () {
  function Validator() {
    _classCallCheck(this, Validator);
    this._getLimitationsRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getLimitationsRegEx"];
    this._getMatrixLimitationsRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getMatrixLimitationsRegEx"];
    this._getMailRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getMailRegEx"];
    this._matrixReplace = _matrix__WEBPACK_IMPORTED_MODULE_1__["matrixReplace"];
    this._message = new _render_message__WEBPACK_IMPORTED_MODULE_2__["Message"]();
  }
  _createClass(Validator, [{
    key: "_renderMessage",
    value: function _renderMessage(trigger, parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      if (!trigger) {
        parent.classList.add('is-invalid');
        if (parent.hasAttribute('data-message-base') && !input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else if (parent.hasAttribute('data-message-extra') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageExtra, 'invalid');
        } else if (!parent.hasAttribute('data-message-extra') && parent.hasAttribute('data-message-base') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else {
          this._message.removeMessage(parent);
        }
      } else {
        if (parent.hasAttribute('data-message-success')) {
          this._message.renderMessage(parent, parent.dataset.messageSuccess, 'valid');
        } else {
          this._message.removeMessage(parent);
        }
      }
    }
  }, {
    key: "_setItemValidState",
    value: function _setItemValidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.add('is-valid');
      parent.classList.remove('is-invalid');
      input.setAttribute('aria-invalid', 'false');
      this._message.removeMessage(parent);
    }
  }, {
    key: "_setItemInvalidState",
    value: function _setItemInvalidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.remove('is-valid');
      input.setAttribute('aria-invalid', 'true');
    }
  }, {
    key: "_simpleLimitation",
    value: function _simpleLimitation(item, limitation) {
      item.value = item.value.replace(this._getLimitationsRegEx(limitation), '');
    }
  }, {
    key: "_matrixLimitation",
    value: function _matrixLimitation(item, matrix, limitation) {
      this._matrixReplace(item, matrix, limitation);
    }
  }, {
    key: "_validateTextInput",
    value: function _validateTextInput(parent, input) {
      var flag = true;
      if (input.value.length >= (+input.getAttribute('minlength') || 1)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateMatrixInput",
    value: function _validateMatrixInput(parent, input) {
      var flag = true;
      if (input.value.length === input.closest('[data-matrix]').dataset.matrix.length) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateEmailInput",
    value: function _validateEmailInput(parent, input) {
      var flag = true;
      if (new RegExp(this._getMailRegEx(), '').test(input.value)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validatePhoneInput",
    value: function _validatePhoneInput(parent, input) {
      var flag = true;
      if (input.value.length >= +parent.dataset.phoneLength) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateCheckbox",
    value: function _validateCheckbox(parent, input) {
      var flag = true;
      if (input.checked) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_findSelectedOption",
    value: function _findSelectedOption(options) {
      var flag = false;
      options.forEach(function (option) {
        if (option.value && option.selected) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_validateSelect",
    value: function _validateSelect(parent, input) {
      var options = input.querySelectorAll('option');
      var customSelectText = parent.querySelector('.custom-select__text');
      input.setAttribute('aria-invalid', 'false');
      var flag = true;
      if (this._findSelectedOption(options)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        parent.classList.remove('not-empty');
        customSelectText.innerHTML = '';
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_returnCheckedElements",
    value: function _returnCheckedElements(inputs) {
      var flag = false;
      inputs.forEach(function (input) {
        if (input.checked) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_removeGroupAria",
    value: function _removeGroupAria(inputs) {
      inputs.forEach(function (input) {
        if (!input.checked) {
          input.removeAttribute('aria-required');
          input.removeAttribute('aria-invalid');
        } else {
          input.setAttribute('aria-required', true);
          input.setAttribute('aria-invalid', false);
        }
      });
    }
  }, {
    key: "_setGroupAria",
    value: function _setGroupAria(inputs) {
      inputs.forEach(function (input) {
        input.setAttribute('aria-required', true);
        input.setAttribute('aria-invalid', true);
      });
    }
  }, {
    key: "_validateToggleGroup",
    value: function _validateToggleGroup(parent) {
      var formElements = parent.querySelectorAll('input');
      var flag = true;
      if (this._returnCheckedElements(formElements)) {
        this._removeGroupAria(formElements);
        parent.classList.remove('is-invalid');
        parent.classList.add('is-valid');
        this._message.removeMessage(parent);
      } else {
        this._setGroupAria(formElements);
        parent.classList.remove('is-valid');
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_customExample",
    value: function _customExample(parent, input) {
      var flag = true;
      if (!input.value.length) {
        parent.dataset.messageBase = 'Поле обязательно к заполнению';
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length < input.minLength) {
        parent.dataset.messageBase = "\u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C \u0432\u0432\u0435\u0441\u0442\u0438 \u0435\u0449\u0451 ".concat(input.minLength - input.value.length, " \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length > input.minLength) {
        parent.dataset.messageBase = "\u0412\u044B \u0432\u0432\u0435\u043B\u0438 ".concat(input.value.length - input.minLength, " \u043B\u0438\u0448\u043D\u0438\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else {
        parent.dataset.messageSuccess = 'Поле заполнено корректно';
        this._setItemValidState(parent, input);
        flag = true;
      }
      return flag;
    }
  }, {
    key: "_validateFile",
    value: function _validateFile(parent, input) {
      var flag = true;
      var sizeTest = parent.dataset.maxSize && input.files[0] ? input.files[0].size < +parent.dataset.maxSize : true;
      if (input.value && sizeTest) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateInput",
    value: function _validateInput(type, parent, input) {
      switch (type) {
        case 'text':
          return this._validateTextInput(parent, input);
        case 'matrix':
          return this._validateMatrixInput(parent, input);
        case 'email':
          return this._validateEmailInput(parent, input);
        case 'phone':
          return this._validatePhoneInput(parent, input);
        case 'checkbox':
          return this._validateCheckbox(parent, input);
        case 'select':
          return this._validateSelect(parent, input);
        case 'toggle-group':
          return this._validateToggleGroup(parent, input);
        case 'file':
          return this._validateFile(parent, input);
        case 'custom-example':
          return this._customExample(parent, input);
        default:
          return false;
      }
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(formElement) {
      var fullValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var parent = formElement.closest('[data-validate-type]');
      if (!parent) {
        return;
      }
      if (!parent.hasAttribute('data-required')) {
        var removeElement = parent.querySelector('input') || parent.querySelector('select') || parent.querySelector('textarea');
        if (!removeElement.value) {
          parent.classList.remove('is-valid');
          parent.classList.remove('is-invalid');
        }
      }
      var onInputValidate = parent.hasAttribute('data-on-input-validate');
      if (parent.hasAttribute('data-limitation')) {
        this._simpleLimitation(formElement, parent.dataset.limitation);
      }
      if (parent.dataset.validateType === 'matrix') {
        this._matrixLimitation(formElement, parent.dataset.matrix, this._getMatrixLimitationsRegEx(parent.dataset.matrixLimitation));
      }
      var isValid = this._validateInput(parent.dataset.validateType, parent, formElement);
      if (onInputValidate || fullValidate) {
        this._renderMessage(isValid, parent, formElement);
      }
    }
  }, {
    key: "_fullValidate",
    value: function _fullValidate(items) {
      var _this = this;
      var result = true;
      items.forEach(function (item) {
        var formElement = item.querySelector('input') || item.querySelector('select') || item.querySelector('textarea');
        _this.validateFormElement(formElement, true);
        if (item.classList.contains('is-invalid')) {
          result = false;
        }
      });
      return result;
    }
  }, {
    key: "validateForm",
    value: function validateForm(form) {
      var validateItems = form.querySelectorAll('[data-validate-type]');
      var result = this._fullValidate(validateItems);
      return result;
    }
  }]);
  return Validator;
}();

/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  modalElements.forEach(function (el) {
    setTimeout(function () {
      el.classList.remove('modal--preload');
    }, 100);
  });
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/modules/tabs/init-tabs.js":
/*!**************************************!*\
  !*** ./js/modules/tabs/init-tabs.js ***!
  \**************************************/
/*! exports provided: initTabs, tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabs", function() { return initTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabs", function() { return tabs; });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs/tabs.js");

var tabs;
var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__["Tabs"]();
  // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда
  window.tabs = tabs;
};


/***/ }),

/***/ "./js/modules/tabs/tabs.js":
/*!*********************************!*\
  !*** ./js/modules/tabs/tabs.js ***!
  \*********************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tabs", function() { return Tabs; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._init();
  }
  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();
      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;
      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;
            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-tabs="control"]')) {
        return;
      }
      evt.preventDefault();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;
      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      var forLoadTabs = document.querySelectorAll('[data-tabs="element"].for-load');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
      forLoadTabs.forEach(function (tab) {
        tab.classList.remove('for-load');
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);
      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;
      this._removeAllActiveClasses(tabControlElements, tabElements);
      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;
      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');
        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }
        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;
      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      if (!transition) {
        parentElement.classList.add('no-transition');
      }
      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }
      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this4 = this;
      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');
      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);
      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);
      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);
      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this4._resizeObserver().observe(element);
        });
      }
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');
      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }
      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);
      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);
      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();
      if (activeControl) {
        activeControl.classList.remove('is-active');
      }
      if (activeElement) {
        activeElement.classList.remove('is-active');
      }
      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }
        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);
  return Tabs;
}();

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};


/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);
    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }
  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();
      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }
      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);
  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ }),

/***/ "./js/vendor/itc-slider.js":
/*!*********************************!*\
  !*** ./js/vendor/itc-slider.js ***!
  \*********************************/
/*! exports provided: ItcSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItcSlider", function() { return ItcSlider; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError("attempted to get private field on non-instance"); } return fn; }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }
function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
var _config = /*#__PURE__*/new WeakMap();
var _state = /*#__PURE__*/new WeakMap();
var _onClick = /*#__PURE__*/new WeakSet();
var _onMouseEnter = /*#__PURE__*/new WeakSet();
var _onMouseLeave = /*#__PURE__*/new WeakSet();
var _onResize = /*#__PURE__*/new WeakSet();
var _onSwipeStart = /*#__PURE__*/new WeakSet();
var _onSwipeEnd = /*#__PURE__*/new WeakSet();
var _onTransitionStart = /*#__PURE__*/new WeakSet();
var _onTransitionEnd = /*#__PURE__*/new WeakSet();
var _onDragStart = /*#__PURE__*/new WeakSet();
var _onVisibilityChange = /*#__PURE__*/new WeakSet();
var _attachEvents = /*#__PURE__*/new WeakSet();
var _detachEvents = /*#__PURE__*/new WeakSet();
var _autoplay = /*#__PURE__*/new WeakSet();
var _balanceItems = /*#__PURE__*/new WeakSet();
var _updateClasses = /*#__PURE__*/new WeakSet();
var _move = /*#__PURE__*/new WeakSet();
var _moveTo = /*#__PURE__*/new WeakSet();
var _init = /*#__PURE__*/new WeakSet();
var _reset = /*#__PURE__*/new WeakSet();
var _updateExProperties = /*#__PURE__*/new WeakSet();
/**
 * @class ItcSlider
 * @version 1.0.0
 * @author https://github.com/itchief
 * @copyright Alexander Maltsev 2020 - 2022
 * @license MIT (https://github.com/itchief/ui-components/blob/master/LICENSE)
 * @tutorial https://itchief.ru/javascript/slider
 */
var ItcSlider = /*#__PURE__*/function () {
  /**
   * @param {HTMLElement} el
   * @param {Object} config
   * @param {String} prefix
   */
  function ItcSlider(_el) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'itc-slider__';
    _classCallCheck(this, ItcSlider);
    _classPrivateMethodInitSpec(this, _updateExProperties);
    _classPrivateMethodInitSpec(this, _reset);
    // приватный метод для выполнения первичной иницианализации
    _classPrivateMethodInitSpec(this, _init);
    _classPrivateMethodInitSpec(this, _moveTo);
    _classPrivateMethodInitSpec(this, _move);
    _classPrivateMethodInitSpec(this, _updateClasses);
    _classPrivateMethodInitSpec(this, _balanceItems);
    _classPrivateMethodInitSpec(this, _autoplay);
    _classPrivateMethodInitSpec(this, _detachEvents);
    _classPrivateMethodInitSpec(this, _attachEvents);
    _classPrivateMethodInitSpec(this, _onVisibilityChange);
    _classPrivateMethodInitSpec(this, _onDragStart);
    _classPrivateMethodInitSpec(this, _onTransitionEnd);
    _classPrivateMethodInitSpec(this, _onTransitionStart);
    _classPrivateMethodInitSpec(this, _onSwipeEnd);
    _classPrivateMethodInitSpec(this, _onSwipeStart);
    _classPrivateMethodInitSpec(this, _onResize);
    _classPrivateMethodInitSpec(this, _onMouseLeave);
    _classPrivateMethodInitSpec(this, _onMouseEnter);
    _classPrivateMethodInitSpec(this, _onClick);
    _classPrivateFieldInitSpec(this, _config, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _state, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldSet(this, _state, {
      prefix: prefix,
      // префикс для классов
      el: _el,
      // элемент который нужно активировать как ItcSlider
      elWrapper: _el.querySelector(".".concat(prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_WRAPPER))),
      // элемент с #CLASS_WRAPPER
      elItems: _el.querySelector(".".concat(prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_ITEMS))),
      // элемент, в котором находятся слайды
      elListItem: _el.querySelectorAll(".".concat(prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_ITEM))),
      // список элементов, являющиеся слайдами
      btnPrev: _el.querySelector(".".concat(prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _BTN_PREV))),
      // кнопка, для перехода к предыдущему слайду
      btnNext: _el.querySelector(".".concat(prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _BTN_NEXT))),
      // кнопка, для перехода к следующему слайду
      btnClassHide: prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _BTN_HIDE),
      // класс для скрытия кнопки
      exOrderMin: 0,
      exOrderMax: 0,
      exItemMin: null,
      exItemMax: null,
      exTranslateMin: 0,
      exTranslateMax: 0,
      direction: 'next',
      // направление смены слайдов
      intervalId: null,
      // id таймера
      isSwiping: false,
      swipeX: 0
    });
    _classPrivateFieldSet(this, _config, _objectSpread({
      loop: true,
      autoplay: false,
      interval: 5000,
      refresh: true,
      swipe: true
    }, config));
    _classPrivateMethodGet(this, _init, _init2).call(this);
    _classPrivateMethodGet(this, _attachEvents, _attachEvents2).call(this);
  }

  /**
   * Статический метод, который возвращает экземпляр ItcSlider, связанный с DOM-элементом
   * @param {HTMLElement} elSlider
   * @returns {?ItcSlider}
   */
  _createClass(ItcSlider, [{
    key: "next",
    value: function next() {
      _classPrivateFieldGet(this, _state).direction = 'next';
      _classPrivateMethodGet(this, _move, _move2).call(this);
    }
  }, {
    key: "prev",
    value: function prev() {
      _classPrivateFieldGet(this, _state).direction = 'prev';
      _classPrivateMethodGet(this, _move, _move2).call(this);
    }
  }, {
    key: "moveTo",
    value: function moveTo(index) {
      _classPrivateMethodGet(this, _moveTo, _moveTo2).call(this, index);
    }
  }, {
    key: "reset",
    value: function reset() {
      _classPrivateMethodGet(this, _reset, _reset2).call(this);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var _this = this;
      _classPrivateMethodGet(this, _detachEvents, _detachEvents2).call(this);
      var transitionNoneClass = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _TRANSITION_NONE);
      var activeClass = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_ITEM_ACTIVE);
      _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
      _classPrivateFieldGet(this, _state).elItems.classList.add(transitionNoneClass);
      _classPrivateFieldGet(this, _state).elItems.style.transform = '';
      _classPrivateFieldGet(this, _state).elListItem.forEach(function (el) {
        el.style.transform = '';
        el.classList.remove(activeClass);
      });
      var selIndicators = "".concat(_classPrivateFieldGet(this, _state).prefix).concat(_classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_INDICATOR_ACTIVE));
      document.querySelectorAll(".".concat(selIndicators)).forEach(function (el) {
        el.classList.remove(selIndicators);
      });
      _classPrivateFieldGet(this, _state).elItems.offsetHeight;
      _classPrivateFieldGet(this, _state).elItems.classList.remove(transitionNoneClass);
      var index = _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _instances).findIndex(function (el) {
        return el.target === _classPrivateFieldGet(_this, _state).el;
      });
      _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _instances).splice(index, 1);
    }
  }], [{
    key: "getInstance",
    value: function getInstance(elSlider) {
      var found = _classStaticPrivateFieldSpecGet(this, ItcSlider, _instances).find(function (el) {
        return el.target === elSlider;
      });
      if (found) {
        return found.instance;
      }
      return null;
    }

    /**
     * @param {String|HTMLElement} target
     * @param {Object} config
     * @param {String} prefix
     */
  }, {
    key: "getOrCreateInstance",
    value: function getOrCreateInstance(target) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'itc-slider__';
      try {
        var elSlider = typeof target === 'string' ? document.querySelector(target) : target;
        var result = this.getInstance(elSlider);
        if (result) {
          return result;
        }
        var slider = new this(elSlider, config, prefix);
        _classStaticPrivateFieldSpecGet(this, ItcSlider, _instances).push({
          target: elSlider,
          instance: slider
        });
        return slider;
      } catch (e) {
        console.error(e);
      }
    }

    // статический метод для активирования элементов как ItcSlider на основе data-атрибутов
  }, {
    key: "createInstances",
    value: function createInstances() {
      var _this2 = this;
      document.querySelectorAll('[data-slider="itc-slider"]').forEach(function (el) {
        var dataset = el.dataset;
        var params = {};
        Object.keys(dataset).forEach(function (key) {
          if (key === 'slider') {
            return;
          }
          var value = dataset[key];
          value = value === 'true' ? true : value;
          value = value === 'false' ? false : value;
          value = Number.isNaN(Number(value)) ? Number(value) : value;
          params[key] = value;
        });
        _this2.getOrCreateInstance(el, params);
      });
    }
  }]);
  return ItcSlider;
}();
function _onClick2(e) {
  if (!(e.target.closest('.itc-slider__btn') || e.target.closest('.itc-slider__indicators'))) {
    return;
  }
  e.preventDefault();
  var classBtnPrev = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _BTN_PREV);
  var classBtnNext = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _BTN_NEXT);
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
  if (e.target.closest(".".concat(classBtnPrev)) || e.target.closest(".".concat(classBtnNext))) {
    _classPrivateFieldGet(this, _state).direction = e.target.closest(".".concat(classBtnPrev)) ? 'prev' : 'next';
    _classPrivateMethodGet(this, _move, _move2).call(this);
  } else if (e.target.dataset.slideTo) {
    var index = parseInt(e.target.dataset.slideTo, 10);
    _classPrivateMethodGet(this, _moveTo, _moveTo2).call(this, index);
  }
  _classPrivateFieldGet(this, _config).loop ? _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this) : null;
}
function _onMouseEnter2() {
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
}
function _onMouseLeave2() {
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this);
}
function _onResize2() {
  window.requestAnimationFrame(_classPrivateMethodGet(this, _reset, _reset2).bind(this));
}
function _onSwipeStart2(e) {
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
  var event = e.type.search('touch') === 0 ? e.touches[0] : e;
  _classPrivateFieldGet(this, _state).swipeX = event.clientX;
  _classPrivateFieldGet(this, _state).isSwiping = true;
}
function _onSwipeEnd2(e) {
  if (!_classPrivateFieldGet(this, _state).isSwiping) {
    return;
  }
  var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;
  var diffPos = _classPrivateFieldGet(this, _state).swipeX - event.clientX;
  if (diffPos > 50) {
    _classPrivateFieldGet(this, _state).direction = 'next';
    _classPrivateMethodGet(this, _move, _move2).call(this);
  } else if (diffPos < -50) {
    _classPrivateFieldGet(this, _state).direction = 'prev';
    _classPrivateMethodGet(this, _move, _move2).call(this);
  }
  _classPrivateFieldGet(this, _state).isSwiping = false;
  if (_classPrivateFieldGet(this, _config).loop) {
    _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this);
  }
}
function _onTransitionStart2() {
  if (_classPrivateFieldGet(this, _state).isBalancing) {
    return;
  }
  _classPrivateFieldGet(this, _state).isBalancing = true;
  window.requestAnimationFrame(_classPrivateMethodGet(this, _balanceItems, _balanceItems2).bind(this));
}
function _onTransitionEnd2() {
  _classPrivateFieldGet(this, _state).isBalancing = false;
}
function _onDragStart2(e) {
  e.preventDefault();
}
function _onVisibilityChange2() {
  if (document.visibilityState === 'hidden') {
    _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
  } else if (document.visibilityState === 'visible' && _classPrivateFieldGet(this, _config).loop) {
    _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this);
  }
}
function _attachEvents2() {
  var _this3 = this;
  _classPrivateFieldGet(this, _state).events = {
    'click': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onClick, _onClick2).bind(this), true],
    'mouseenter': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onMouseEnter, _onMouseEnter2).bind(this), true],
    'mouseleave': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onMouseLeave, _onMouseLeave2).bind(this), true],
    'resize': [window, _classPrivateMethodGet(this, _onResize, _onResize2).bind(this), _classPrivateFieldGet(this, _config).refresh],
    'itc-slider__transition-start': [_classPrivateFieldGet(this, _state).elItems, _classPrivateMethodGet(this, _onTransitionStart, _onTransitionStart2).bind(this), _classPrivateFieldGet(this, _config).loop],
    'transitionend': [_classPrivateFieldGet(this, _state).elItems, _classPrivateMethodGet(this, _onTransitionEnd, _onTransitionEnd2).bind(this), _classPrivateFieldGet(this, _config).loop],
    'touchstart': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onSwipeStart, _onSwipeStart2).bind(this), _classPrivateFieldGet(this, _config).swipe],
    'mousedown': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onSwipeStart, _onSwipeStart2).bind(this), _classPrivateFieldGet(this, _config).swipe],
    'touchend': [document, _classPrivateMethodGet(this, _onSwipeEnd, _onSwipeEnd2).bind(this), _classPrivateFieldGet(this, _config).swipe],
    'mouseup': [document, _classPrivateMethodGet(this, _onSwipeEnd, _onSwipeEnd2).bind(this), _classPrivateFieldGet(this, _config).swipe],
    'dragstart': [_classPrivateFieldGet(this, _state).el, _classPrivateMethodGet(this, _onDragStart, _onDragStart2).bind(this), true],
    'visibilitychange': [document, _classPrivateMethodGet(this, _onVisibilityChange, _onVisibilityChange2).bind(this), true]
  };
  Object.keys(_classPrivateFieldGet(this, _state).events).forEach(function (type) {
    if (_classPrivateFieldGet(_this3, _state).events[type][2]) {
      var el = _classPrivateFieldGet(_this3, _state).events[type][0];
      var fn = _classPrivateFieldGet(_this3, _state).events[type][1];
      el.addEventListener(type, fn);
    }
  });
}
function _detachEvents2() {
  var _this4 = this;
  Object.keys(_classPrivateFieldGet(this, _state).events).forEach(function (type) {
    if (_classPrivateFieldGet(_this4, _state).events[type][2]) {
      var el = _classPrivateFieldGet(_this4, _state).events[type][0];
      var fn = _classPrivateFieldGet(_this4, _state).events[type][1];
      el.removeEventListener(type, fn);
    }
  });
}
function _autoplay2(action) {
  var _this5 = this;
  if (!_classPrivateFieldGet(this, _config).autoplay) {
    return;
  }
  if (action === 'stop') {
    clearInterval(_classPrivateFieldGet(this, _state).intervalId);
    _classPrivateFieldGet(this, _state).intervalId = null;
    return;
  }
  if (_classPrivateFieldGet(this, _state).intervalId === null) {
    _classPrivateFieldGet(this, _state).intervalId = setInterval(function () {
      _classPrivateFieldGet(_this5, _state).direction = 'next';
      _classPrivateMethodGet(_this5, _move, _move2).call(_this5);
    }, _classPrivateFieldGet(this, _config).interval);
  }
}
function _balanceItems2() {
  var _this6 = this;
  if (!_classPrivateFieldGet(this, _state).isBalancing) {
    return;
  }
  var wrapperRect = _classPrivateFieldGet(this, _state).elWrapper.getBoundingClientRect();
  var targetWidth = wrapperRect.width / _classPrivateFieldGet(this, _state).countActiveItems / 2;
  var countItems = _classPrivateFieldGet(this, _state).elListItem.length;
  if (_classPrivateFieldGet(this, _state).direction === 'next') {
    var exItemRectRight = _classPrivateFieldGet(this, _state).exItemMin.getBoundingClientRect().right;
    if (exItemRectRight < wrapperRect.left - targetWidth) {
      var elFound = _classPrivateFieldGet(this, _state).els.find(function (item) {
        return item.el === _classPrivateFieldGet(_this6, _state).exItemMin;
      });
      elFound.order = _classPrivateFieldGet(this, _state).exOrderMin + countItems;
      var translate = _classPrivateFieldGet(this, _state).exTranslateMin + countItems * _classPrivateFieldGet(this, _state).width;
      elFound.translate = translate;
      _classPrivateFieldGet(this, _state).exItemMin.style.transform = "translate3D(".concat(translate, "px, 0px, 0.1px)");
      _classPrivateMethodGet(this, _updateExProperties, _updateExProperties2).call(this);
    }
  } else {
    var exItemRectLeft = _classPrivateFieldGet(this, _state).exItemMax.getBoundingClientRect().left;
    if (exItemRectLeft > wrapperRect.right + targetWidth) {
      var _elFound = _classPrivateFieldGet(this, _state).els.find(function (item) {
        return item.el === _classPrivateFieldGet(_this6, _state).exItemMax;
      });
      _elFound.order = _classPrivateFieldGet(this, _state).exOrderMax - countItems;
      var _translate = _classPrivateFieldGet(this, _state).exTranslateMax - countItems * _classPrivateFieldGet(this, _state).width;
      _elFound.translate = _translate;
      _classPrivateFieldGet(this, _state).exItemMax.style.transform = "translate3D(".concat(_translate, "px, 0px, 0.1px)");
      _classPrivateMethodGet(this, _updateExProperties, _updateExProperties2).call(this);
    }
  }
  window.requestAnimationFrame(_classPrivateMethodGet(this, _balanceItems, _balanceItems2).bind(this));
}
function _updateClasses2() {
  var _this7 = this;
  var activeClass = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _EL_ITEM_ACTIVE);
  _classPrivateFieldGet(this, _state).activeItems.forEach(function (item, index) {
    if (item) {
      _classPrivateFieldGet(_this7, _state).elListItem[index].classList.add(activeClass);
    } else {
      _classPrivateFieldGet(_this7, _state).elListItem[index].classList.remove(activeClass);
    }
    var elListIndicators = _classPrivateFieldGet(_this7, _state).el.querySelectorAll(".".concat(_classPrivateFieldGet(_this7, _state).prefix).concat(_classStaticPrivateFieldSpecGet(_this7.constructor, ItcSlider, _EL_INDICATOR)));
    if (elListIndicators.length && item) {
      elListIndicators[index].classList.add("".concat(_classPrivateFieldGet(_this7, _state).prefix).concat(_classStaticPrivateFieldSpecGet(_this7.constructor, ItcSlider, _EL_INDICATOR_ACTIVE)));
    } else if (elListIndicators.length && !item) {
      elListIndicators[index].classList.remove("".concat(_classPrivateFieldGet(_this7, _state).prefix).concat(_classStaticPrivateFieldSpecGet(_this7.constructor, ItcSlider, _EL_INDICATOR_ACTIVE)));
    }
  });
}
function _move2() {
  var widthItem = _classPrivateFieldGet(this, _state).direction === 'next' ? -_classPrivateFieldGet(this, _state).width : _classPrivateFieldGet(this, _state).width;
  var transform = _classPrivateFieldGet(this, _state).translate + widthItem;
  if (!_classPrivateFieldGet(this, _config).loop) {
    var limit = _classPrivateFieldGet(this, _state).width * (_classPrivateFieldGet(this, _state).elListItem.length - _classPrivateFieldGet(this, _state).countActiveItems);
    if (transform < -limit || transform > 0) {
      return;
    }
    if (_classPrivateFieldGet(this, _state).btnPrev) {
      _classPrivateFieldGet(this, _state).btnPrev.classList.remove(_classPrivateFieldGet(this, _state).btnClassHide);
      _classPrivateFieldGet(this, _state).btnNext.classList.remove(_classPrivateFieldGet(this, _state).btnClassHide);
    }
    if (_classPrivateFieldGet(this, _state).btnPrev && transform === -limit) {
      _classPrivateFieldGet(this, _state).btnNext.classList.add(_classPrivateFieldGet(this, _state).btnClassHide);
    } else if (_classPrivateFieldGet(this, _state).btnPrev && transform === 0) {
      _classPrivateFieldGet(this, _state).btnPrev.classList.add(_classPrivateFieldGet(this, _state).btnClassHide);
    }
  }
  if (_classPrivateFieldGet(this, _state).direction === 'next') {
    _classPrivateFieldGet(this, _state).activeItems = [].concat(_toConsumableArray(_classPrivateFieldGet(this, _state).activeItems.slice(-1)), _toConsumableArray(_classPrivateFieldGet(this, _state).activeItems.slice(0, -1)));
  } else {
    _classPrivateFieldGet(this, _state).activeItems = [].concat(_toConsumableArray(_classPrivateFieldGet(this, _state).activeItems.slice(1)), _toConsumableArray(_classPrivateFieldGet(this, _state).activeItems.slice(0, 1)));
  }
  _classPrivateMethodGet(this, _updateClasses, _updateClasses2).call(this);
  _classPrivateFieldGet(this, _state).translate = transform;
  _classPrivateFieldGet(this, _state).elItems.style.transform = "translate3D(".concat(transform, "px, 0px, 0.1px)");
  _classPrivateFieldGet(this, _state).elItems.dispatchEvent(new CustomEvent('itc-slider__transition-start', {
    bubbles: true
  }));
}
function _moveTo2(index) {
  var delta = _classPrivateFieldGet(this, _state).activeItems.reduce(function (acc, current, currentIndex) {
    var diff = current ? index - currentIndex : acc;
    return Math.abs(diff) < Math.abs(acc) ? diff : acc;
  }, _classPrivateFieldGet(this, _state).activeItems.length);
  if (delta !== 0) {
    _classPrivateFieldGet(this, _state).direction = delta > 0 ? 'next' : 'prev';
    for (var i = 0; i < Math.abs(delta); i++) {
      _classPrivateMethodGet(this, _move, _move2).call(this);
    }
  }
}
function _init2() {
  var _this8 = this;
  // состояние элементов
  _classPrivateFieldGet(this, _state).els = [];
  // текущее значение translate
  _classPrivateFieldGet(this, _state).translate = 0;
  // позиции активных элементов
  _classPrivateFieldGet(this, _state).activeItems = [];
  // состояние элементов
  _classPrivateFieldGet(this, _state).isBalancing = false;
  // ширина одного слайда
  _classPrivateFieldGet(this, _state).width = _classPrivateFieldGet(this, _state).elListItem[0].getBoundingClientRect().width;
  // ширина #EL_WRAPPER
  var widthWrapper = _classPrivateFieldGet(this, _state).elWrapper.getBoundingClientRect().width;
  // количество активных элементов
  _classPrivateFieldGet(this, _state).countActiveItems = Math.round(widthWrapper / _classPrivateFieldGet(this, _state).width);
  _classPrivateFieldGet(this, _state).elListItem.forEach(function (el, index) {
    el.style.transform = '';
    _classPrivateFieldGet(_this8, _state).activeItems.push(index < _classPrivateFieldGet(_this8, _state).countActiveItems ? 1 : 0);
    _classPrivateFieldGet(_this8, _state).els.push({
      el: el,
      index: index,
      order: index,
      translate: 0
    });
  });
  if (_classPrivateFieldGet(this, _config).loop) {
    var lastIndex = _classPrivateFieldGet(this, _state).elListItem.length - 1;
    var translate = -(lastIndex + 1) * _classPrivateFieldGet(this, _state).width;
    _classPrivateFieldGet(this, _state).elListItem[lastIndex].style.transform = "translate3D(".concat(translate, "px, 0px, 0.1px)");
    _classPrivateFieldGet(this, _state).els[lastIndex].order = -1;
    _classPrivateFieldGet(this, _state).els[lastIndex].translate = translate;
    _classPrivateMethodGet(this, _updateExProperties, _updateExProperties2).call(this);
  } else if (_classPrivateFieldGet(this, _state).btnPrev) {
    _classPrivateFieldGet(this, _state).btnPrev.classList.add(_classPrivateFieldGet(this, _state).btnClassHide);
  }
  _classPrivateMethodGet(this, _updateClasses, _updateClasses2).call(this);
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this);
}
function _reset2() {
  var _this9 = this;
  var transitionNoneClass = _classPrivateFieldGet(this, _state).prefix + _classStaticPrivateFieldSpecGet(this.constructor, ItcSlider, _TRANSITION_NONE);
  var widthItem = _classPrivateFieldGet(this, _state).elListItem[0].getBoundingClientRect().width;
  var widthWrapper = _classPrivateFieldGet(this, _state).elWrapper.getBoundingClientRect().width;
  var countActiveEls = Math.round(widthWrapper / widthItem);
  if (widthItem === _classPrivateFieldGet(this, _state).width && countActiveEls === _classPrivateFieldGet(this, _state).countActiveItems) {
    return;
  }
  _classPrivateMethodGet(this, _autoplay, _autoplay2).call(this, 'stop');
  _classPrivateFieldGet(this, _state).elItems.classList.add(transitionNoneClass);
  _classPrivateFieldGet(this, _state).elItems.style.transform = 'translate3D(0px, 0px, 0.1px)';
  _classPrivateMethodGet(this, _init, _init2).call(this);
  window.requestAnimationFrame(function () {
    _classPrivateFieldGet(_this9, _state).elItems.classList.remove(transitionNoneClass);
  });
}
function _updateExProperties2() {
  var els = _classPrivateFieldGet(this, _state).els.map(function (item) {
    return item.el;
  });
  var orders = _classPrivateFieldGet(this, _state).els.map(function (item) {
    return item.order;
  });
  _classPrivateFieldGet(this, _state).exOrderMin = Math.min.apply(Math, _toConsumableArray(orders));
  _classPrivateFieldGet(this, _state).exOrderMax = Math.max.apply(Math, _toConsumableArray(orders));
  var min = orders.indexOf(_classPrivateFieldGet(this, _state).exOrderMin);
  var max = orders.indexOf(_classPrivateFieldGet(this, _state).exOrderMax);
  _classPrivateFieldGet(this, _state).exItemMin = els[min];
  _classPrivateFieldGet(this, _state).exItemMax = els[max];
  _classPrivateFieldGet(this, _state).exTranslateMin = _classPrivateFieldGet(this, _state).els[min].translate;
  _classPrivateFieldGet(this, _state).exTranslateMax = _classPrivateFieldGet(this, _state).els[max].translate;
}
var _EL_WRAPPER = {
  writable: true,
  value: 'wrapper'
};
var _EL_ITEMS = {
  writable: true,
  value: 'items'
};
var _EL_ITEM = {
  writable: true,
  value: 'item'
};
var _EL_ITEM_ACTIVE = {
  writable: true,
  value: 'item_active'
};
var _EL_INDICATOR = {
  writable: true,
  value: 'indicator'
};
var _EL_INDICATOR_ACTIVE = {
  writable: true,
  value: 'indicator_active'
};
var _BTN_PREV = {
  writable: true,
  value: 'btn_prev'
};
var _BTN_NEXT = {
  writable: true,
  value: 'btn_next'
};
var _BTN_HIDE = {
  writable: true,
  value: 'btn_hide'
};
var _TRANSITION_NONE = {
  writable: true,
  value: 'transition-none'
};
var _instances = {
  writable: true,
  value: []
};
ItcSlider.createInstances();

/***/ }),

/***/ "./js/vendor/lazysizes.js":
/*!********************************!*\
  !*** ./js/vendor/lazysizes.js ***!
  \********************************/
/*! exports provided: lazySizes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lazySizes", function() { return lazySizes; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
/*! lazysizes - v5.3.2 */

var lazySizes = function lazySizes() {
  !function (e) {
    var t = function (u, D, f) {
      "use strict";

      var k, H;
      if (function () {
        var e;
        var t = {
          lazyClass: "lazyload",
          loadedClass: "lazyloaded",
          loadingClass: "lazyloading",
          preloadClass: "lazypreload",
          errorClass: "lazyerror",
          autosizesClass: "lazyautosizes",
          fastLoadedClass: "ls-is-cached",
          iframeLoadMode: 0,
          srcAttr: "data-src",
          srcsetAttr: "data-srcset",
          sizesAttr: "data-sizes",
          minSize: 40,
          customMedia: {},
          init: true,
          expFactor: 1.5,
          hFac: .8,
          loadMode: 2,
          loadHidden: true,
          ricTimeout: 0,
          throttleDelay: 125
        };
        H = u.lazySizesConfig || u.lazysizesConfig || {};
        for (e in t) {
          if (!(e in H)) {
            H[e] = t[e];
          }
        }
      }(), !D || !D.getElementsByClassName) {
        return {
          init: function init() {},
          cfg: H,
          noSupport: true
        };
      }
      var O = D.documentElement,
        i = u.HTMLPictureElement,
        P = "addEventListener",
        $ = "getAttribute",
        q = u[P].bind(u),
        I = u.setTimeout,
        U = u.requestAnimationFrame || I,
        o = u.requestIdleCallback,
        j = /^picture$/i,
        r = ["load", "error", "lazyincluded", "_lazyloaded"],
        a = {},
        G = Array.prototype.forEach,
        J = function J(e, t) {
          if (!a[t]) {
            a[t] = new RegExp("(\\s|^)" + t + "(\\s|$)");
          }
          return a[t].test(e[$]("class") || "") && a[t];
        },
        K = function K(e, t) {
          if (!J(e, t)) {
            e.setAttribute("class", (e[$]("class") || "").trim() + " " + t);
          }
        },
        Q = function Q(e, t) {
          var a;
          if (a = J(e, t)) {
            e.setAttribute("class", (e[$]("class") || "").replace(a, " "));
          }
        },
        V = function V(t, a, e) {
          var i = e ? P : "removeEventListener";
          if (e) {
            V(t, a);
          }
          r.forEach(function (e) {
            t[i](e, a);
          });
        },
        X = function X(e, t, a, i, r) {
          var n = D.createEvent("Event");
          if (!a) {
            a = {};
          }
          a.instance = k;
          n.initEvent(t, !i, !r);
          n.detail = a;
          e.dispatchEvent(n);
          return n;
        },
        Y = function Y(e, t) {
          var a;
          if (!i && (a = u.picturefill || H.pf)) {
            if (t && t.src && !e[$]("srcset")) {
              e.setAttribute("srcset", t.src);
            }
            a({
              reevaluate: true,
              elements: [e]
            });
          } else if (t && t.src) {
            e.src = t.src;
          }
        },
        Z = function Z(e, t) {
          return (getComputedStyle(e, null) || {})[t];
        },
        s = function s(e, t, a) {
          a = a || e.offsetWidth;
          while (a < H.minSize && t && !e._lazysizesWidth) {
            a = t.offsetWidth;
            t = t.parentNode;
          }
          return a;
        },
        ee = function () {
          var a, i;
          var t = [];
          var r = [];
          var n = t;
          var s = function s() {
            var e = n;
            n = t.length ? r : t;
            a = true;
            i = false;
            while (e.length) {
              e.shift()();
            }
            a = false;
          };
          var e = function e(_e, t) {
            if (a && !t) {
              _e.apply(this, arguments);
            } else {
              n.push(_e);
              if (!i) {
                i = true;
                (D.hidden ? I : U)(s);
              }
            }
          };
          e._lsFlush = s;
          return e;
        }(),
        te = function te(a, e) {
          return e ? function () {
            ee(a);
          } : function () {
            var e = this;
            var t = arguments;
            ee(function () {
              a.apply(e, t);
            });
          };
        },
        ae = function ae(e) {
          var a;
          var i = 0;
          var r = H.throttleDelay;
          var n = H.ricTimeout;
          var t = function t() {
            a = false;
            i = f.now();
            e();
          };
          var s = o && n > 49 ? function () {
            o(t, {
              timeout: n
            });
            if (n !== H.ricTimeout) {
              n = H.ricTimeout;
            }
          } : te(function () {
            I(t);
          }, true);
          return function (e) {
            var t;
            if (e = e === true) {
              n = 33;
            }
            if (a) {
              return;
            }
            a = true;
            t = r - (f.now() - i);
            if (t < 0) {
              t = 0;
            }
            if (e || t < 9) {
              s();
            } else {
              I(s, t);
            }
          };
        },
        ie = function ie(e) {
          var t, a;
          var i = 99;
          var r = function r() {
            t = null;
            e();
          };
          var n = function n() {
            var e = f.now() - a;
            if (e < i) {
              I(n, i - e);
            } else {
              (o || r)(r);
            }
          };
          return function () {
            a = f.now();
            if (!t) {
              t = I(n, i);
            }
          };
        },
        e = function () {
          var v, m, c, h, e;
          var y, z, g, p, C, b, A;
          var n = /^img$/i;
          var d = /^iframe$/i;
          var E = "onscroll" in u && !/(gle|ing)bot/.test(navigator.userAgent);
          var _ = 0;
          var w = 0;
          var M = 0;
          var N = -1;
          var L = function L(e) {
            M--;
            if (!e || M < 0 || !e.target) {
              M = 0;
            }
          };
          var x = function x(e) {
            if (A == null) {
              A = Z(D.body, "visibility") == "hidden";
            }
            return A || !(Z(e.parentNode, "visibility") == "hidden" && Z(e, "visibility") == "hidden");
          };
          var W = function W(e, t) {
            var a;
            var i = e;
            var r = x(e);
            g -= t;
            b += t;
            p -= t;
            C += t;
            while (r && (i = i.offsetParent) && i != D.body && i != O) {
              r = (Z(i, "opacity") || 1) > 0;
              if (r && Z(i, "overflow") != "visible") {
                a = i.getBoundingClientRect();
                r = C > a.left && p < a.right && b > a.top - 1 && g < a.bottom + 1;
              }
            }
            return r;
          };
          var t = function t() {
            var e, t, a, i, r, n, s, o, l, u, f, c;
            var d = k.elements;
            if ((h = H.loadMode) && M < 8 && (e = d.length)) {
              t = 0;
              N++;
              for (; t < e; t++) {
                if (!d[t] || d[t]._lazyRace) {
                  continue;
                }
                if (!E || k.prematureUnveil && k.prematureUnveil(d[t])) {
                  R(d[t]);
                  continue;
                }
                if (!(o = d[t][$]("data-expand")) || !(n = o * 1)) {
                  n = w;
                }
                if (!u) {
                  u = !H.expand || H.expand < 1 ? O.clientHeight > 500 && O.clientWidth > 500 ? 500 : 370 : H.expand;
                  k._defEx = u;
                  f = u * H.expFactor;
                  c = H.hFac;
                  A = null;
                  if (w < f && M < 1 && N > 2 && h > 2 && !D.hidden) {
                    w = f;
                    N = 0;
                  } else if (h > 1 && N > 1 && M < 6) {
                    w = u;
                  } else {
                    w = _;
                  }
                }
                if (l !== n) {
                  y = innerWidth + n * c;
                  z = innerHeight + n;
                  s = n * -1;
                  l = n;
                }
                a = d[t].getBoundingClientRect();
                if ((b = a.bottom) >= s && (g = a.top) <= z && (C = a.right) >= s * c && (p = a.left) <= y && (b || C || p || g) && (H.loadHidden || x(d[t])) && (m && M < 3 && !o && (h < 3 || N < 4) || W(d[t], n))) {
                  R(d[t]);
                  r = true;
                  if (M > 9) {
                    break;
                  }
                } else if (!r && m && !i && M < 4 && N < 4 && h > 2 && (v[0] || H.preloadAfterLoad) && (v[0] || !o && (b || C || p || g || d[t][$](H.sizesAttr) != "auto"))) {
                  i = v[0] || d[t];
                }
              }
              if (i && !r) {
                R(i);
              }
            }
          };
          var a = ae(t);
          var S = function S(e) {
            var t = e.target;
            if (t._lazyCache) {
              delete t._lazyCache;
              return;
            }
            L(e);
            K(t, H.loadedClass);
            Q(t, H.loadingClass);
            V(t, B);
            X(t, "lazyloaded");
          };
          var i = te(S);
          var B = function B(e) {
            i({
              target: e.target
            });
          };
          var T = function T(e, t) {
            var a = e.getAttribute("data-load-mode") || H.iframeLoadMode;
            if (a == 0) {
              e.contentWindow.location.replace(t);
            } else if (a == 1) {
              e.src = t;
            }
          };
          var F = function F(e) {
            var t;
            var a = e[$](H.srcsetAttr);
            if (t = H.customMedia[e[$]("data-media") || e[$]("media")]) {
              e.setAttribute("media", t);
            }
            if (a) {
              e.setAttribute("srcset", a);
            }
          };
          var s = te(function (t, e, a, i, r) {
            var n, s, o, l, u, f;
            if (!(u = X(t, "lazybeforeunveil", e)).defaultPrevented) {
              if (i) {
                if (a) {
                  K(t, H.autosizesClass);
                } else {
                  t.setAttribute("sizes", i);
                }
              }
              s = t[$](H.srcsetAttr);
              n = t[$](H.srcAttr);
              if (r) {
                o = t.parentNode;
                l = o && j.test(o.nodeName || "");
              }
              f = e.firesLoad || "src" in t && (s || n || l);
              u = {
                target: t
              };
              K(t, H.loadingClass);
              if (f) {
                clearTimeout(c);
                c = I(L, 2500);
                V(t, B, true);
              }
              if (l) {
                G.call(o.getElementsByTagName("source"), F);
              }
              if (s) {
                t.setAttribute("srcset", s);
              } else if (n && !l) {
                if (d.test(t.nodeName)) {
                  T(t, n);
                } else {
                  t.src = n;
                }
              }
              if (r && (s || l)) {
                Y(t, {
                  src: n
                });
              }
            }
            if (t._lazyRace) {
              delete t._lazyRace;
            }
            Q(t, H.lazyClass);
            ee(function () {
              var e = t.complete && t.naturalWidth > 1;
              if (!f || e) {
                if (e) {
                  K(t, H.fastLoadedClass);
                }
                S(u);
                t._lazyCache = true;
                I(function () {
                  if ("_lazyCache" in t) {
                    delete t._lazyCache;
                  }
                }, 9);
              }
              if (t.loading == "lazy") {
                M--;
              }
            }, true);
          });
          var R = function R(e) {
            if (e._lazyRace) {
              return;
            }
            var t;
            var a = n.test(e.nodeName);
            var i = a && (e[$](H.sizesAttr) || e[$]("sizes"));
            var r = i == "auto";
            if ((r || !m) && a && (e[$]("src") || e.srcset) && !e.complete && !J(e, H.errorClass) && J(e, H.lazyClass)) {
              return;
            }
            t = X(e, "lazyunveilread").detail;
            if (r) {
              re.updateElem(e, true, e.offsetWidth);
            }
            e._lazyRace = true;
            M++;
            s(e, t, r, i, a);
          };
          var r = ie(function () {
            H.loadMode = 3;
            a();
          });
          var o = function o() {
            if (H.loadMode == 3) {
              H.loadMode = 2;
            }
            r();
          };
          var l = function l() {
            if (m) {
              return;
            }
            if (f.now() - e < 999) {
              I(l, 999);
              return;
            }
            m = true;
            H.loadMode = 3;
            a();
            q("scroll", o, true);
          };
          return {
            _: function _() {
              e = f.now();
              k.elements = D.getElementsByClassName(H.lazyClass);
              v = D.getElementsByClassName(H.lazyClass + " " + H.preloadClass);
              q("scroll", a, true);
              q("resize", a, true);
              q("pageshow", function (e) {
                if (e.persisted) {
                  var t = D.querySelectorAll("." + H.loadingClass);
                  if (t.length && t.forEach) {
                    U(function () {
                      t.forEach(function (e) {
                        if (e.complete) {
                          R(e);
                        }
                      });
                    });
                  }
                }
              });
              if (u.MutationObserver) {
                new MutationObserver(a).observe(O, {
                  childList: true,
                  subtree: true,
                  attributes: true
                });
              } else {
                O[P]("DOMNodeInserted", a, true);
                O[P]("DOMAttrModified", a, true);
                setInterval(a, 999);
              }
              q("hashchange", a, true);
              ["focus", "mouseover", "click", "load", "transitionend", "animationend"].forEach(function (e) {
                D[P](e, a, true);
              });
              if (/d$|^c/.test(D.readyState)) {
                l();
              } else {
                q("load", l);
                D[P]("DOMContentLoaded", a);
                I(l, 2e4);
              }
              if (k.elements.length) {
                t();
                ee._lsFlush();
              } else {
                a();
              }
            },
            checkElems: a,
            unveil: R,
            _aLSL: o
          };
        }(),
        re = function () {
          var a;
          var n = te(function (e, t, a, i) {
            var r, n, s;
            e._lazysizesWidth = i;
            i += "px";
            e.setAttribute("sizes", i);
            if (j.test(t.nodeName || "")) {
              r = t.getElementsByTagName("source");
              for (n = 0, s = r.length; n < s; n++) {
                r[n].setAttribute("sizes", i);
              }
            }
            if (!a.detail.dataAttr) {
              Y(e, a.detail);
            }
          });
          var i = function i(e, t, a) {
            var i;
            var r = e.parentNode;
            if (r) {
              a = s(e, r, a);
              i = X(e, "lazybeforesizes", {
                width: a,
                dataAttr: !!t
              });
              if (!i.defaultPrevented) {
                a = i.detail.width;
                if (a && a !== e._lazysizesWidth) {
                  n(e, r, i, a);
                }
              }
            }
          };
          var e = function e() {
            var e;
            var t = a.length;
            if (t) {
              e = 0;
              for (; e < t; e++) {
                i(a[e]);
              }
            }
          };
          var t = ie(e);
          return {
            _: function _() {
              a = D.getElementsByClassName(H.autosizesClass);
              q("resize", t);
            },
            checkElems: t,
            updateElem: i
          };
        }(),
        t = function t() {
          if (!t.i && D.getElementsByClassName) {
            t.i = true;
            re._();
            e._();
          }
        };
      return I(function () {
        H.init && t();
      }), k = {
        cfg: H,
        autoSizer: re,
        loader: e,
        init: t,
        uP: Y,
        aC: K,
        rC: Q,
        hC: J,
        fire: X,
        gW: s,
        rAF: ee
      };
    }(e, e.document, Date);
    e.lazySizes = t, "object" == ( false ? undefined : _typeof(module)) && module.exports && (module.exports = t);
  }("undefined" != typeof window ? window : {});
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ "../node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map